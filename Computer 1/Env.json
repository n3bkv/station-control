[
    {
        "id": "792ffe6e3ed14ad3",
        "type": "tab",
        "label": "Env",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d1c09421de45c05",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Modbus data gathering and queue management",
        "info": "What the explainer video:\nhttps://youtu.be/FVI1hgdqcms",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "f7c98c04dfe0ada9",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "d": true,
        "name": "Read Inverter Voltage :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "inverter",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":22, \"quantity\":2}",
        "payloadType": "json",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "2c7a6549c39bc09f",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "next",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "next",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 760,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "ac1486c16ce0fbb3",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "Advance queue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "next",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 260,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "1ebb087c7d85d58e",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Modbus Queue",
        "func": "let resendifnoresposne = true; // resend the last message is no response is received\nlet resendinterval = 45; // resend last e message every x seconds\nlet online_threshold = 45; // Seconds between updates under which the device is considered online\nlet offline_threshold = 300; // Seconds between updates above which the device is considered offline\n\nlet notifmsg = null;\n\n// Check and make sure the incoming message has a topic\nif ((msg.topic===\"\")||(msg.topic===null)||(msg.topic===undefined)) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Topic missing\"});\n    return;\n}\n\nlet lastupdate = context.get(\"lastupdate\");\nlet state = context.get(\"state\") | 0;\nlet queue = context.get(\"queue\");\nlet queuecount = 0;\nif (queue === undefined) {\n    queue = [];\n} else {\n    if (Array.isArray(queue)) {\n        queuecount = queue.length;\n    } else {\n        queue = [];\n    }\n}\nlet current = new Date().getTime();\nlet send = false;\n\nswitch (msg.topic.toLowerCase()) {\n    case \"update\":\n        // Update the timer and statistics\n\n        if (lastupdate !== undefined) {\n            notifmsg = { \"topic\": \"Information\", \"payload\": {} };\n            current = current - lastupdate;\n            current = Math.floor(current / 1000);\n            notifmsg.payload.secondsincelastupdate = current;\n            var minute = Math.floor(current / 60);\n            var hour = Math.floor(minute / 60);\n            var day = Math.floor(hour / 24);\n            if (current > 24 * 60 * 60) {\n                notifmsg.payload.updatetext = \"Last update \" + day + \" days, \" + hour % 24 + \" hours, \" + minute % 60 + \" minutes, \" + current % 60 + \" seconds ago\";\n            } else if (current > 60 * 60) {\n                notifmsg.payload.updatetext = \"Last update \" + hour % 24 + \" hours, \" + minute % 60 + \" minutes, \" + current % 60 + \" seconds ago\";\n            } else if (current > 60) {\n                notifmsg.payload.updatetext = \"Last update \" + minute % 60 + \" minutes, \" + current % 60 + \" seconds ago\";\n            } else {\n                notifmsg.payload.updatetext = \"Last update \" + current % 60 + \" seconds ago\";\n            }\n\n            // Resend last message if there is no response from the server\n            if (resendifnoresposne) {\n                if ((current>0) && (current % resendinterval===0)) {\n                    let lastmsg = context.get(\"lastmsg\");\n                    if ((lastmsg!==undefined) && (context.get(\"sent\"))) {\n                        notifmsg.payload.resend = true;\n                        if ((lastmsg.payload.fc === 1) || (lastmsg.payload.fc === 2) || (lastmsg.payload.fc === 3) || (lastmsg.payload.fc === 4)) {\n                            // this is a modbus read request\n                            node.status({ fill: \"green\", shape: \"dot\", text: \"Read re-sent!\" });\n                            return [lastmsg, null, notifmsg];\n                        } else {\n                            // this is a modbus write request\n                            node.status({ fill: \"green\", shape: \"dot\", text: \"Write re-sent!\" });\n                            return [null, lastmsg, notifmsg];\n                        }\n                    }\n                }\n            }\n\n            // Check for online state\n            if (state !== 1) {\n                if (current < online_threshold) {\n                    notifmsg.topic = \"Warning\";\n                    notifmsg.payload.text = \"Device is now online\";\n                    notifmsg.payload.statuschange = true;\n                    state = 1;\n                    context.set(\"state\", state);\n                }\n            } else {\n                if (current > offline_threshold) {\n                    notifmsg.topic = \"Error\";\n                    notifmsg.payload.text = \"Device is not transmitting\";\n                    notifmsg.payload.statuschange = true;\n                    state = 99;\n                    context.set(\"state\", state);\n                }\n            }\n            notifmsg.payload.state = state;\n            if (state===1) {\n                node.status({ fill: \"blue\", shape: \"ring\", text: queuecount+ \" | \"+notifmsg.payload.updatetext });\n            } else {\n                node.status({ fill: \"red\", shape: \"ring\", text: queuecount + \" | \" + notifmsg.payload.updatetext });\n            }\n            return [null, null, notifmsg];\n\n        } else {\n            node.status({ fill: \"grey\", shape: \"ring\", text: \"No data\" });\n        }\n        break;\n    case \"next\":\n        // Update the lastupdate counter\n        context.set(\"lastupdate\", current);\n        context.set(\"sent\", false);\n        send = true;\n        break;\n    case \"reset\":\n        context.set(\"queue\",[]);\n        context.set(\"sent\", false);\n        context.set(\"lastmsg\", undefined);\n        break;\n    default:\n        // The incoming message is a modbus request\n\n        // delete the last msg to prevent from being resent\n        // context.set(\"lastmsg\", undefined);\n\n        // Check if there is already a message in the queue with the same topic. \n        // If there is it needs to be deleted, because we only keep the last message.\n        for (let i=queue.length-1; i>=0; i--) {\n            if (queue[i].topic === msg.topic) {\n                queue.splice(i,1);\n            }\n        }\n\n        // Add the message to the end of the queue\n        queue.push(msg);\n        context.set(\"queue\",queue);\n\n        if (!context.get(\"sent\")) {\n            send = true;\n        }\n        node.status({ fill: \"green\", shape: \"dot\", text: queue.length });\n\n}\n\n// We need to send out a new message\nif (send) {\n\n    if (queue.length>0) {\n        // Get the older message from the array\n        let newmsg = queue[0];\n        // remove this message\n        queue.splice(0,1);\n        context.set(\"queue\",queue);\n        context.set(\"sent\", true);\n        context.set(\"lastmsg\", newmsg);\n\n        if ((newmsg.payload.fc === 1) || (newmsg.payload.fc === 2) || (newmsg.payload.fc === 3) || (newmsg.payload.fc === 4)) {\n            // this is a modbus read request\n            node.status({ fill: \"green\", shape: \"dot\", text: \"Read sent!\" });\n            return[newmsg,null,null];\n        } else {\n            // this is a modbus write request\n            node.status({ fill: \"green\", shape: \"dot\", text: \"Write sent!\" });\n            return [null, newmsg, null];\n        }\n        \n    }\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 360,
        "wires": [
            [
                "659854db725cecce",
                "ac1486c16ce0fbb3"
            ],
            [],
            []
        ],
        "info": "# Modbus Queue\r\n\r\nThis node queueing read and write messages for modbus. Use this node if you are reading and writing the same device with many different requests. E.g. reading different coil/register intervals continously and also writing to the device at the same time.\r\n\r\nIt does a few things:\r\n- queues all messages arrive on the input port\r\n- based on the msg.topic, older messages of the same topci is ignored\r\n- sends out the oldest message and waits for the \r\n- monitors the time since last message and send out report on the output\r\n- handles online/offline status\r\n- resend the last message is response is not received in time\r\n\r\n## Input Data\r\n\r\n### payload\r\n\r\nThe payload should contain the data that gets sent to the flex-getter or flex-write node.\r\nTypical modbus read payload:\r\n`{\"value\":0,\"fc\":3,\"unitid\":1,\"address\":1000,\"quantity\":20}`\r\nTypical modbus write payload:\r\n`{\"value\":false,\"fc\":5,\"unitid\":1,\"address\":0,\"quantity\":1}`\r\n\r\n### topic\r\n\r\nEach message must contain a topic (any text), and this topic is used to identify the different read/write requests and delete any earlier request with the same topic if it still in the queueing\r\n\r\nThere are a few reserved topic for special function (for these payload is ignored):\r\n- reset: resets the queue and deleted any data collected so far\r\n- next: this is the message fed back from the flex getter/write node to indicate to this node that a new message can be sent out\r\n- update: this should be coming from a 1 second time to display the current queue count, time since the last update and online/offline status\r\n\r\n## Output ports\r\n\r\n### Port 1: flex getter\r\n\r\nThis output should be connected to a modbos-flex-getter and all the read requests will be sent out through this port\r\n\r\n### Port 2: flex write\r\n\r\nThis output should be connected to a modbos-flex-write and all the write requests will be sent out through this port\r\n\r\n### Port 3: status messages\r\n\r\nThis port outputs a status message for every update message (msg.topic=\"update\").\r\n\r\n- topic: \"Information\" for regular updates, \"Warning\": offline device is now back online, \"Error\": device is offline\r\n- payload.text: message like when the device gone offline, or back online\r\n- payload.updatetext: time passed since the last update (human readable format)\r\n- payload.secondsincelastupdate: number of seconds since the last update from the device\r\n- payload.statuschange: true if status is changed (gone offline, back online)\r\n- payload.state: 0: initial state, no data yet, 1: device online, 99: device offline\r\n\r\n## Node Settings\r\n\r\nChange the settings in the first 4 lines of the code to influence the behaviour. Explanation is in the code as comment."
    },
    {
        "id": "659854db725cecce",
        "type": "modbus-flex-getter",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "db1405cafe2f049c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 880,
        "y": 480,
        "wires": [
            [
                "2a52367e6ba33ea7"
            ],
            []
        ]
    },
    {
        "id": "b069555d03ec0d0f",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Wind Turbine Voltage :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "wind_turbine",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":20, \"quantity\":2}",
        "payloadType": "json",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "7ca375bdfa491d0b",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Grid Voltage :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "grid",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":18, \"quantity\":2}",
        "payloadType": "json",
        "x": 360,
        "y": 420,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "2a52367e6ba33ea7",
        "type": "switch",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wind_turbine",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grid",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grey_box",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "radio_power",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "inside_vault",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "solar_control",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "5192f03755899470"
            ],
            [
                "072b27f255d3eb8f"
            ],
            [
                "56553b3c3d0efaab"
            ],
            [
                "fcdf8830a13d28a1"
            ],
            [
                "43dbed8c2757ffa5"
            ],
            [
                "4736b8cb8554e104"
            ]
        ]
    },
    {
        "id": "a276287646f680be",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Wind Turbine",
        "group": "7dacb2dbf22828a7",
        "order": 18,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Wind Turbine",
        "label": "Volts",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00bc1f",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1770,
        "y": 340,
        "wires": []
    },
    {
        "id": "0d452b77cb8daa40",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Grid",
        "group": "7dacb2dbf22828a7",
        "order": 9,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Grid",
        "label": "Volts",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "225",
        "seg2": "255",
        "diff": false,
        "className": "",
        "x": 1710,
        "y": 620,
        "wires": []
    },
    {
        "id": "347d9c59ae64bdff",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 25",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 340,
        "wires": [
            [
                "a276287646f680be",
                "22fceca656ac37a4",
                "0a63d82ebe9eeb86"
            ]
        ]
    },
    {
        "id": "ef08d6a0b4830e72",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 26",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 640,
        "wires": [
            [
                "0d452b77cb8daa40",
                "7933123ea5a27809",
                "83cec1c8cd73af14"
            ]
        ]
    },
    {
        "id": "5192f03755899470",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 340,
        "wires": [
            [
                "347d9c59ae64bdff"
            ]
        ]
    },
    {
        "id": "072b27f255d3eb8f",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 640,
        "wires": [
            [
                "ef08d6a0b4830e72"
            ]
        ]
    },
    {
        "id": "3b2ae287c211bbc5",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Grey Box",
        "group": "7dacb2dbf22828a7",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Grey Box",
        "label": "Degrees",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "140",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "110",
        "diff": false,
        "className": "",
        "x": 1780,
        "y": 840,
        "wires": []
    },
    {
        "id": "ce45712d021f3ee2",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Radio Power",
        "group": "7dacb2dbf22828a7",
        "order": 15,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Radio Power",
        "label": "Volts",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1730,
        "y": 1140,
        "wires": []
    },
    {
        "id": "059dec5509c40763",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Inside Vault",
        "group": "7dacb2dbf22828a7",
        "order": 11,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Inside Vault",
        "label": "Degrees",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "140",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "110",
        "diff": false,
        "className": "",
        "x": 1790,
        "y": 1340,
        "wires": []
    },
    {
        "id": "7d56db248509a126",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Solar Control",
        "group": "7dacb2dbf22828a7",
        "order": 16,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Solar Control",
        "label": "Degrees",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "140",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "110",
        "diff": false,
        "className": "",
        "x": 1750,
        "y": 1580,
        "wires": []
    },
    {
        "id": "eae2145f530698da",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Outside Air",
        "group": "7dacb2dbf22828a7",
        "order": 13,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Outside Air",
        "label": "Degrees",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "140",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "115",
        "diff": false,
        "className": "",
        "x": 1870,
        "y": 2020,
        "wires": []
    },
    {
        "id": "217dc711e3fafdac",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Inside Enclosure",
        "group": "7dacb2dbf22828a7",
        "order": 10,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Inside Enclosure",
        "label": "Degrees",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "140",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "110",
        "diff": false,
        "className": "",
        "x": 1880,
        "y": 2280,
        "wires": []
    },
    {
        "id": "db3c6c1585dde956",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Controller Temperature",
        "group": "7dacb2dbf22828a7",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Controller Temp",
        "label": "Degrees",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "140",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "110",
        "diff": false,
        "className": "",
        "x": 1900,
        "y": 2540,
        "wires": []
    },
    {
        "id": "294d8907335e795e",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "Tower Base Batt",
        "group": "7dacb2dbf22828a7",
        "order": 17,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Tower Base Batt",
        "label": "Volts",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#dde000",
            "#00bd1f",
            "#ca3838"
        ],
        "seg1": "8",
        "seg2": "15",
        "diff": false,
        "className": "",
        "x": 1880,
        "y": 2840,
        "wires": []
    },
    {
        "id": "56553b3c3d0efaab",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 840,
        "wires": [
            [
                "d1de810e03bd7e84"
            ]
        ]
    },
    {
        "id": "d1de810e03bd7e84",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 27",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 840,
        "wires": [
            [
                "3b2ae287c211bbc5",
                "d95034bc219b3b6e",
                "baaf06910ef2cc95"
            ]
        ]
    },
    {
        "id": "fcdf8830a13d28a1",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 1160,
        "wires": [
            [
                "7b6ec242571e51d4"
            ]
        ]
    },
    {
        "id": "7b6ec242571e51d4",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 28",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1160,
        "wires": [
            [
                "ce45712d021f3ee2",
                "bdbedc2f93713257",
                "64e64e7537ab5585"
            ]
        ]
    },
    {
        "id": "43dbed8c2757ffa5",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 1340,
        "wires": [
            [
                "2df10ccb1f8a5239"
            ]
        ]
    },
    {
        "id": "2df10ccb1f8a5239",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 29",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1340,
        "wires": [
            [
                "059dec5509c40763",
                "12183bd296671871",
                "f3d773b8267008ee"
            ]
        ]
    },
    {
        "id": "4736b8cb8554e104",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 1580,
        "wires": [
            [
                "0ab4eefbc31a3778"
            ]
        ]
    },
    {
        "id": "0ab4eefbc31a3778",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 30",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1580,
        "wires": [
            [
                "7d56db248509a126",
                "825870fef1a363c8",
                "c5dfaff69961395a"
            ]
        ]
    },
    {
        "id": "9caa53ab5feb1fa4",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1450,
        "y": 2040,
        "wires": [
            [
                "bbf957c540117a86"
            ]
        ]
    },
    {
        "id": "bbf957c540117a86",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 31",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2040,
        "wires": [
            [
                "eae2145f530698da",
                "0d1b24e52090b5f4",
                "fd8ca4ddf771e480"
            ]
        ]
    },
    {
        "id": "b4ebf7b4a9c6dff6",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 2320,
        "wires": [
            [
                "67a870fbf2dc5e50"
            ]
        ]
    },
    {
        "id": "67a870fbf2dc5e50",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 32",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 2320,
        "wires": [
            [
                "217dc711e3fafdac",
                "be981965e69bcca1",
                "410276872227a39b"
            ]
        ]
    },
    {
        "id": "4551d21bdeed22c5",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 2580,
        "wires": [
            [
                "0818d9c3753cd4b9"
            ]
        ]
    },
    {
        "id": "0818d9c3753cd4b9",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 33",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 2580,
        "wires": [
            [
                "db3c6c1585dde956",
                "adc5b5a948f1dce1",
                "03b85afe0163cfd2"
            ]
        ]
    },
    {
        "id": "8ff0a93263c55e87",
        "type": "buffer-parser",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 2900,
        "wires": [
            [
                "69ccc5a62a93d432"
            ]
        ]
    },
    {
        "id": "69ccc5a62a93d432",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "function 34",
        "func": "const buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readFloatBE();\nmsg.value = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 2900,
        "wires": [
            [
                "294d8907335e795e",
                "49c130d6276ec386",
                "51d64b23ea8a04df"
            ]
        ]
    },
    {
        "id": "adbc1656827cc9a8",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Grey Box Temp :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "grey_box",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":276, \"quantity\":2}",
        "payloadType": "json",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "96956c54c3a89457",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Radio Power Voltage :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "radio_power",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":16, \"quantity\":2}",
        "payloadType": "json",
        "x": 395,
        "y": 551,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "2ea862bf86bbdf51",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Inside Vault Temp :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "inside_vault",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":274, \"quantity\":2}",
        "payloadType": "json",
        "x": 400,
        "y": 600,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "bc199578582a9f09",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Solar Control Temp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "solar_control",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":24, \"address\":272, \"quantity\":2}",
        "payloadType": "json",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "6c3f98e0b2f3bdce",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Inside Enclosure Temp :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "inside_enclosure",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":34, \"address\":24, \"quantity\":2}",
        "payloadType": "json",
        "x": 380,
        "y": 1040,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "994b393e6f301098",
        "type": "modbus-flex-getter",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "fa5b08d298eb1d31",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "0eda68abfe9f9b56"
            ],
            []
        ]
    },
    {
        "id": "90dee16684603f28",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Modbus Queue",
        "func": "let resendifnoresposne = true; // resend the last message is no response is received\nlet resendinterval = 30; // resend last e message every x seconds\nlet online_threshold = 30; // Seconds between updates under which the device is considered online\nlet offline_threshold = 300; // Seconds between updates above which the device is considered offline\n\nlet notifmsg = null;\n\n// Check and make sure the incoming message has a topic\nif ((msg.topic===\"\")||(msg.topic===null)||(msg.topic===undefined)) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Topic missing\"});\n    return;\n}\n\nlet lastupdate = context.get(\"lastupdate\");\nlet state = context.get(\"state\") | 0;\nlet queue = context.get(\"queue\");\nlet queuecount = 0;\nif (queue === undefined) {\n    queue = [];\n} else {\n    if (Array.isArray(queue)) {\n        queuecount = queue.length;\n    } else {\n        queue = [];\n    }\n}\nlet current = new Date().getTime();\nlet send = false;\n\nswitch (msg.topic.toLowerCase()) {\n    case \"update\":\n        // Update the timer and statistics\n\n        if (lastupdate !== undefined) {\n            notifmsg = { \"topic\": \"Information\", \"payload\": {} };\n            current = current - lastupdate;\n            current = Math.floor(current / 1000);\n            notifmsg.payload.secondsincelastupdate = current;\n            var minute = Math.floor(current / 60);\n            var hour = Math.floor(minute / 60);\n            var day = Math.floor(hour / 24);\n            if (current > 24 * 60 * 60) {\n                notifmsg.payload.updatetext = \"Last update \" + day + \" days, \" + hour % 24 + \" hours, \" + minute % 60 + \" minutes, \" + current % 60 + \" seconds ago\";\n            } else if (current > 60 * 60) {\n                notifmsg.payload.updatetext = \"Last update \" + hour % 24 + \" hours, \" + minute % 60 + \" minutes, \" + current % 60 + \" seconds ago\";\n            } else if (current > 60) {\n                notifmsg.payload.updatetext = \"Last update \" + minute % 60 + \" minutes, \" + current % 60 + \" seconds ago\";\n            } else {\n                notifmsg.payload.updatetext = \"Last update \" + current % 60 + \" seconds ago\";\n            }\n\n            // Resend last message if there is no response from the server\n            if (resendifnoresposne) {\n                if ((current>0) && (current % resendinterval===0)) {\n                    let lastmsg = context.get(\"lastmsg\");\n                    if ((lastmsg!==undefined) && (context.get(\"sent\"))) {\n                        notifmsg.payload.resend = true;\n                        if ((lastmsg.payload.fc === 1) || (lastmsg.payload.fc === 2) || (lastmsg.payload.fc === 3) || (lastmsg.payload.fc === 4)) {\n                            // this is a modbus read request\n                            node.status({ fill: \"green\", shape: \"dot\", text: \"Read re-sent!\" });\n                            return [lastmsg, null, notifmsg];\n                        } else {\n                            // this is a modbus write request\n                            node.status({ fill: \"green\", shape: \"dot\", text: \"Write re-sent!\" });\n                            return [null, lastmsg, notifmsg];\n                        }\n                    }\n                }\n            }\n\n            // Check for online state\n            if (state !== 1) {\n                if (current < online_threshold) {\n                    notifmsg.topic = \"Warning\";\n                    notifmsg.payload.text = \"Device is now online\";\n                    notifmsg.payload.statuschange = true;\n                    state = 1;\n                    context.set(\"state\", state);\n                }\n            } else {\n                if (current > offline_threshold) {\n                    notifmsg.topic = \"Error\";\n                    notifmsg.payload.text = \"Device is not transmitting\";\n                    notifmsg.payload.statuschange = true;\n                    state = 99;\n                    context.set(\"state\", state);\n                }\n            }\n            notifmsg.payload.state = state;\n            if (state===1) {\n                node.status({ fill: \"blue\", shape: \"ring\", text: queuecount+ \" | \"+notifmsg.payload.updatetext });\n            } else {\n                node.status({ fill: \"red\", shape: \"ring\", text: queuecount + \" | \" + notifmsg.payload.updatetext });\n            }\n            return [null, null, notifmsg];\n\n        } else {\n            node.status({ fill: \"grey\", shape: \"ring\", text: \"No data\" });\n        }\n        break;\n    case \"next\":\n        // Update the lastupdate counter\n        context.set(\"lastupdate\", current);\n        context.set(\"sent\", false);\n        send = true;\n        break;\n    case \"reset\":\n        context.set(\"queue\",[]);\n        context.set(\"sent\", false);\n        context.set(\"lastmsg\", undefined);\n        break;\n    default:\n        // The incoming message is a modbus request\n\n        // delete the last msg to prevent from being resent\n        // context.set(\"lastmsg\", undefined);\n\n        // Check if there is already a message in the queue with the same topic. \n        // If there is it needs to be deleted, because we only keep the last message.\n        for (let i=queue.length-1; i>=0; i--) {\n            if (queue[i].topic === msg.topic) {\n                queue.splice(i,1);\n            }\n        }\n\n        // Add the message to the end of the queue\n        queue.push(msg);\n        context.set(\"queue\",queue);\n\n        if (!context.get(\"sent\")) {\n            send = true;\n        }\n        node.status({ fill: \"green\", shape: \"dot\", text: queue.length });\n\n}\n\n// We need to send out a new message\nif (send) {\n\n    if (queue.length>0) {\n        // Get the older message from the array\n        let newmsg = queue[0];\n        // remove this message\n        queue.splice(0,1);\n        context.set(\"queue\",queue);\n        context.set(\"sent\", true);\n        context.set(\"lastmsg\", newmsg);\n\n        if ((newmsg.payload.fc === 1) || (newmsg.payload.fc === 2) || (newmsg.payload.fc === 3) || (newmsg.payload.fc === 4)) {\n            // this is a modbus read request\n            node.status({ fill: \"green\", shape: \"dot\", text: \"Read sent!\" });\n            return[newmsg,null,null];\n        } else {\n            // this is a modbus write request\n            node.status({ fill: \"green\", shape: \"dot\", text: \"Write sent!\" });\n            return [null, newmsg, null];\n        }\n        \n    }\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 980,
        "wires": [
            [
                "994b393e6f301098",
                "c7b42f8fda62cfc2"
            ],
            [],
            []
        ],
        "info": "# Modbus Queue\r\n\r\nThis node queueing read and write messages for modbus. Use this node if you are reading and writing the same device with many different requests. E.g. reading different coil/register intervals continously and also writing to the device at the same time.\r\n\r\nIt does a few things:\r\n- queues all messages arrive on the input port\r\n- based on the msg.topic, older messages of the same topci is ignored\r\n- sends out the oldest message and waits for the \r\n- monitors the time since last message and send out report on the output\r\n- handles online/offline status\r\n- resend the last message is response is not received in time\r\n\r\n## Input Data\r\n\r\n### payload\r\n\r\nThe payload should contain the data that gets sent to the flex-getter or flex-write node.\r\nTypical modbus read payload:\r\n`{\"value\":0,\"fc\":3,\"unitid\":1,\"address\":1000,\"quantity\":20}`\r\nTypical modbus write payload:\r\n`{\"value\":false,\"fc\":5,\"unitid\":1,\"address\":0,\"quantity\":1}`\r\n\r\n### topic\r\n\r\nEach message must contain a topic (any text), and this topic is used to identify the different read/write requests and delete any earlier request with the same topic if it still in the queueing\r\n\r\nThere are a few reserved topic for special function (for these payload is ignored):\r\n- reset: resets the queue and deleted any data collected so far\r\n- next: this is the message fed back from the flex getter/write node to indicate to this node that a new message can be sent out\r\n- update: this should be coming from a 1 second time to display the current queue count, time since the last update and online/offline status\r\n\r\n## Output ports\r\n\r\n### Port 1: flex getter\r\n\r\nThis output should be connected to a modbos-flex-getter and all the read requests will be sent out through this port\r\n\r\n### Port 2: flex write\r\n\r\nThis output should be connected to a modbos-flex-write and all the write requests will be sent out through this port\r\n\r\n### Port 3: status messages\r\n\r\nThis port outputs a status message for every update message (msg.topic=\"update\").\r\n\r\n- topic: \"Information\" for regular updates, \"Warning\": offline device is now back online, \"Error\": device is offline\r\n- payload.text: message like when the device gone offline, or back online\r\n- payload.updatetext: time passed since the last update (human readable format)\r\n- payload.secondsincelastupdate: number of seconds since the last update from the device\r\n- payload.statuschange: true if status is changed (gone offline, back online)\r\n- payload.state: 0: initial state, no data yet, 1: device online, 99: device offline\r\n\r\n## Node Settings\r\n\r\nChange the settings in the first 4 lines of the code to influence the behaviour. Explanation is in the code as comment."
    },
    {
        "id": "0eda68abfe9f9b56",
        "type": "switch",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "outside_air",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "inside_enclosure",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "controller_temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "tower_base_batt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 950,
        "y": 1120,
        "wires": [
            [
                "9caa53ab5feb1fa4"
            ],
            [
                "b4ebf7b4a9c6dff6"
            ],
            [
                "4551d21bdeed22c5"
            ],
            [
                "8ff0a93263c55e87"
            ]
        ]
    },
    {
        "id": "c7b42f8fda62cfc2",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "Advance queue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "next",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 840,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "428752062dd7f550",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "next",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "next",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "549a9905bdf6f851",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Controller Temperature :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "controller_temperature",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":34, \"address\":20, \"quantity\":2}",
        "payloadType": "json",
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "ff3a1ac69661b870",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Tower Base Batt :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "tower_base_batt",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":34, \"address\":16, \"quantity\":2}",
        "payloadType": "json",
        "x": 400,
        "y": 1160,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "7b5cc4771aab8524",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Read Outside Air Temp :30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "outside_air",
        "payload": "{\"value\":0, \"fc\":3, \"unitid\":34, \"address\":22, \"quantity\":2}",
        "payloadType": "json",
        "x": 360,
        "y": 980,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "ed7d7b9880259843",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "update",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "update",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "90dee16684603f28"
            ]
        ]
    },
    {
        "id": "22fceca656ac37a4",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 460,
        "wires": [
            [
                "024fccd20a8c51a5"
            ]
        ]
    },
    {
        "id": "024fccd20a8c51a5",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 460,
        "wires": [
            [
                "678b7d6cb9e47395"
            ]
        ]
    },
    {
        "id": "678b7d6cb9e47395",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2100,
        "y": 460,
        "wires": [
            [
                "c48dabcf6832b19c",
                "88824e4e70245ce9"
            ]
        ]
    },
    {
        "id": "88824e4e70245ce9",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "dab48f89cede9078",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Wind Turbine Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2550,
        "y": 457,
        "wires": [
            [
                "69a6d401f8683587"
            ]
        ]
    },
    {
        "id": "7933123ea5a27809",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1680,
        "y": 700,
        "wires": [
            [
                "4f4280411104aba5"
            ]
        ]
    },
    {
        "id": "4f4280411104aba5",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 700,
        "wires": [
            [
                "dfaedb27086d922d"
            ]
        ]
    },
    {
        "id": "dfaedb27086d922d",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2080,
        "y": 700,
        "wires": [
            [
                "7303d997992d34ad",
                "74dd7c1baff13260"
            ]
        ]
    },
    {
        "id": "74dd7c1baff13260",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "dab48f89cede9078",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Grid Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2542,
        "y": 701,
        "wires": [
            [
                "12ab36c4386f96ca"
            ]
        ]
    },
    {
        "id": "d95034bc219b3b6e",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 960,
        "wires": [
            [
                "6294fd6d3ec813c8"
            ]
        ]
    },
    {
        "id": "6294fd6d3ec813c8",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 960,
        "wires": [
            [
                "fbe8310c19672e15"
            ]
        ]
    },
    {
        "id": "fbe8310c19672e15",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2120,
        "y": 960,
        "wires": [
            [
                "b3f16cd12c70b776",
                "9e51c586a00a9c53"
            ]
        ]
    },
    {
        "id": "9e51c586a00a9c53",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "d5fe809990847bca",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Grey Box Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2541,
        "y": 956,
        "wires": [
            [
                "e0e4d28cceb363b7"
            ]
        ]
    },
    {
        "id": "bdbedc2f93713257",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 1220,
        "wires": [
            [
                "2903b496d7d84c6f"
            ]
        ]
    },
    {
        "id": "2903b496d7d84c6f",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 1220,
        "wires": [
            [
                "7daab46e0fc80acc"
            ]
        ]
    },
    {
        "id": "7daab46e0fc80acc",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2120,
        "y": 1220,
        "wires": [
            [
                "a2171bf0c2ec41ca",
                "fb9e2c806443a7be"
            ]
        ]
    },
    {
        "id": "fb9e2c806443a7be",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "dab48f89cede9078",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Radio Power Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2549,
        "y": 1214,
        "wires": [
            [
                "9ffaf5b05bd44878"
            ]
        ]
    },
    {
        "id": "12183bd296671871",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1680,
        "y": 1420,
        "wires": [
            [
                "f9ca8db94af962f8"
            ]
        ]
    },
    {
        "id": "f9ca8db94af962f8",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 1420,
        "wires": [
            [
                "3c41a7827c76ed5a"
            ]
        ]
    },
    {
        "id": "3c41a7827c76ed5a",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2100,
        "y": 1420,
        "wires": [
            [
                "a85980b2a1daec5d",
                "4ea79a9f2bb8f55b"
            ]
        ]
    },
    {
        "id": "4ea79a9f2bb8f55b",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "d5fe809990847bca",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Inside Vault Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2554,
        "y": 1400,
        "wires": [
            [
                "bdff4fbbfdc98ea0"
            ]
        ]
    },
    {
        "id": "825870fef1a363c8",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1660,
        "y": 1660,
        "wires": [
            [
                "f8cecf3153cd3f15"
            ]
        ]
    },
    {
        "id": "f8cecf3153cd3f15",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1660,
        "wires": [
            [
                "95b0a5c503c797a9"
            ]
        ]
    },
    {
        "id": "95b0a5c503c797a9",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2060,
        "y": 1660,
        "wires": [
            [
                "1404891cbc1b109a",
                "8f24d3771b5a1451"
            ]
        ]
    },
    {
        "id": "8f24d3771b5a1451",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "d5fe809990847bca",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Solar Control Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2567,
        "y": 1640,
        "wires": [
            [
                "d2278db25673071e"
            ]
        ]
    },
    {
        "id": "0d1b24e52090b5f4",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1780,
        "y": 2120,
        "wires": [
            [
                "aeeb70d12689cca3"
            ]
        ]
    },
    {
        "id": "aeeb70d12689cca3",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 2120,
        "wires": [
            [
                "6074d4e6970b4a7f"
            ]
        ]
    },
    {
        "id": "6074d4e6970b4a7f",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2180,
        "y": 2120,
        "wires": [
            [
                "e1610cf315941e42",
                "b191c83f5c898f5c"
            ]
        ]
    },
    {
        "id": "b191c83f5c898f5c",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "d5fe809990847bca",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Outside Air Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2600,
        "y": 2123,
        "wires": [
            [
                "105f6b91170e647b"
            ]
        ]
    },
    {
        "id": "be981965e69bcca1",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1800,
        "y": 2380,
        "wires": [
            [
                "8bdfd3882dc8b0bd"
            ]
        ]
    },
    {
        "id": "8bdfd3882dc8b0bd",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2380,
        "wires": [
            [
                "f28a54dcb0da89fb"
            ]
        ]
    },
    {
        "id": "f28a54dcb0da89fb",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2200,
        "y": 2380,
        "wires": [
            [
                "5f719cd22cfb12e6",
                "b142c7b025e9135b"
            ]
        ]
    },
    {
        "id": "b142c7b025e9135b",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "dab48f89cede9078",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Inside Enclosure Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2607,
        "y": 2373,
        "wires": [
            [
                "2db6180d8667f814"
            ]
        ]
    },
    {
        "id": "adc5b5a948f1dce1",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1800,
        "y": 2640,
        "wires": [
            [
                "871259890a8e9649"
            ]
        ]
    },
    {
        "id": "871259890a8e9649",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2640,
        "wires": [
            [
                "c631f8cf5d7c48ee"
            ]
        ]
    },
    {
        "id": "c631f8cf5d7c48ee",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2200,
        "y": 2640,
        "wires": [
            [
                "d84230cfd4709c9b",
                "9666a8660ef0747d"
            ]
        ]
    },
    {
        "id": "9666a8660ef0747d",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "dab48f89cede9078",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Controller Temperature Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2653,
        "y": 2634,
        "wires": [
            [
                "9d3d1b37ea499eaa"
            ]
        ]
    },
    {
        "id": "49c130d6276ec386",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1820,
        "y": 2960,
        "wires": [
            [
                "5d2b039bdb7c74d9"
            ]
        ]
    },
    {
        "id": "5d2b039bdb7c74d9",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 2960,
        "wires": [
            [
                "268d27609b132ba0"
            ]
        ]
    },
    {
        "id": "268d27609b132ba0",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 2220,
        "y": 2960,
        "wires": [
            [
                "2409262d1dbd8ae5",
                "5727d386fad5fca7"
            ]
        ]
    },
    {
        "id": "5727d386fad5fca7",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "dab48f89cede9078",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Tower Base Batt Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2655,
        "y": 2955,
        "wires": [
            [
                "b83d3a27ed7adee6"
            ]
        ]
    },
    {
        "id": "d610e9f744838e04",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "update :10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "update",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "1ebb087c7d85d58e"
            ]
        ]
    },
    {
        "id": "2089f5db5a4a2b37",
        "type": "ui_text",
        "z": "792ffe6e3ed14ad3",
        "group": "96611395a92827d0",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Conditions",
        "format": "{{msg.payload.weather}}",
        "layout": "row-center",
        "x": 530,
        "y": 2160,
        "wires": []
    },
    {
        "id": "5fea0ae7fd9854e9",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Temperature filter",
        "func": "var tempf = msg.payload.tempc\n\ntempf = Math.round(((tempf * 9)/5) + 32)\n    msg.payload = tempf\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 2280,
        "wires": [
            [
                "dcbc3b50e26b3904",
                "6ea5f1cce4f052c1"
            ]
        ]
    },
    {
        "id": "f8eb24b748c2d26a",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Windspeed filter",
        "func": "var wind = msg.payload.windspeed\nmsg.payload = wind \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 2620,
        "wires": [
            [
                "ab7723b06ae47f11",
                "600ea8d0a4a7aeb4"
            ]
        ]
    },
    {
        "id": "dcbc3b50e26b3904",
        "type": "ui_text",
        "z": "792ffe6e3ed14ad3",
        "group": "96611395a92827d0",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}} F&deg",
        "layout": "col-center",
        "x": 650,
        "y": 2280,
        "wires": []
    },
    {
        "id": "ab7723b06ae47f11",
        "type": "ui_text",
        "z": "792ffe6e3ed14ad3",
        "group": "96611395a92827d0",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Windspeed",
        "format": "{{msg.payload}} mph",
        "layout": "col-center",
        "x": 710,
        "y": 2600,
        "wires": []
    },
    {
        "id": "6ea5f1cce4f052c1",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "96611395a92827d0",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Temperature History",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 820,
        "y": 2320,
        "wires": [
            [
                "785f5500bea1ff99"
            ]
        ]
    },
    {
        "id": "600ea8d0a4a7aeb4",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "96611395a92827d0",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Windspeed History",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 730,
        "y": 2700,
        "wires": [
            [
                "e0b1048bde1daebc"
            ]
        ]
    },
    {
        "id": "794adee61df77290",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1490,
        "y": 520,
        "wires": [
            [
                "6ef3ded6cfc352c7"
            ]
        ]
    },
    {
        "id": "6ef3ded6cfc352c7",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\wind_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1850,
        "y": 520,
        "wires": [
            [
                "1e98aacb61ad8274"
            ]
        ]
    },
    {
        "id": "69a6d401f8683587",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\wind_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2885,
        "y": 455,
        "wires": [
            []
        ]
    },
    {
        "id": "1e98aacb61ad8274",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2150,
        "y": 520,
        "wires": [
            [
                "88824e4e70245ce9"
            ]
        ]
    },
    {
        "id": "51c6573a4ee66ca0",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 760,
        "wires": [
            [
                "eb716634550e3ad3"
            ]
        ]
    },
    {
        "id": "eb716634550e3ad3",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\grid_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2040,
        "y": 760,
        "wires": [
            [
                "a807511c59b1f75e"
            ]
        ]
    },
    {
        "id": "a807511c59b1f75e",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2310,
        "y": 760,
        "wires": [
            [
                "74dd7c1baff13260"
            ]
        ]
    },
    {
        "id": "12ab36c4386f96ca",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\grid_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2882,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "020cba74bba0ab74",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1670,
        "y": 1040,
        "wires": [
            [
                "58e270e7f42d8e93"
            ]
        ]
    },
    {
        "id": "58e270e7f42d8e93",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\grey_box_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2020,
        "y": 1040,
        "wires": [
            [
                "a4887a7f0288a0a0"
            ]
        ]
    },
    {
        "id": "a4887a7f0288a0a0",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2330,
        "y": 1040,
        "wires": [
            [
                "9e51c586a00a9c53"
            ]
        ]
    },
    {
        "id": "e0e4d28cceb363b7",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\grey_box_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2907,
        "y": 958,
        "wires": [
            []
        ]
    },
    {
        "id": "0ca62dc2d70395aa",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 1280,
        "wires": [
            [
                "6b1ac5bbb267ae9d"
            ]
        ]
    },
    {
        "id": "6b1ac5bbb267ae9d",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\radio_power_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2030,
        "y": 1280,
        "wires": [
            [
                "dd5312f48a3daa81"
            ]
        ]
    },
    {
        "id": "dd5312f48a3daa81",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2350,
        "y": 1280,
        "wires": [
            [
                "fb9e2c806443a7be"
            ]
        ]
    },
    {
        "id": "9ffaf5b05bd44878",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\radio_power_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2915,
        "y": 1214,
        "wires": [
            []
        ]
    },
    {
        "id": "bdff4fbbfdc98ea0",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\inside_vault_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2930,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "b09d15e0295c4589",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2330,
        "y": 1480,
        "wires": [
            [
                "4ea79a9f2bb8f55b"
            ]
        ]
    },
    {
        "id": "a9216e60f9ed7197",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\inside_vault_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2030,
        "y": 1480,
        "wires": [
            [
                "b09d15e0295c4589"
            ]
        ]
    },
    {
        "id": "3b25b6a03954ef37",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 1480,
        "wires": [
            [
                "a9216e60f9ed7197"
            ]
        ]
    },
    {
        "id": "d2278db25673071e",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\solar_control_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2942,
        "y": 1638,
        "wires": [
            []
        ]
    },
    {
        "id": "c91b7a4606bb58a6",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2270,
        "y": 1720,
        "wires": [
            [
                "8f24d3771b5a1451"
            ]
        ]
    },
    {
        "id": "c49d0281d4a6e53e",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\solar_control_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1990,
        "y": 1720,
        "wires": [
            [
                "c91b7a4606bb58a6"
            ]
        ]
    },
    {
        "id": "b3a7a664c632d237",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1610,
        "y": 1720,
        "wires": [
            [
                "c49d0281d4a6e53e"
            ]
        ]
    },
    {
        "id": "105f6b91170e647b",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\outside_air_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2972,
        "y": 2122,
        "wires": [
            []
        ]
    },
    {
        "id": "97cb285a0371f8a4",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2390,
        "y": 2180,
        "wires": [
            [
                "b191c83f5c898f5c"
            ]
        ]
    },
    {
        "id": "51cba6ca8a27639f",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\outside_air_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2060,
        "y": 2180,
        "wires": [
            [
                "97cb285a0371f8a4"
            ]
        ]
    },
    {
        "id": "f0af49f2f3b85097",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 2180,
        "wires": [
            [
                "51cba6ca8a27639f"
            ]
        ]
    },
    {
        "id": "2db6180d8667f814",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\inside_enclosure_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2997,
        "y": 2375,
        "wires": [
            []
        ]
    },
    {
        "id": "7bba81cf7f551d6e",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2390,
        "y": 2440,
        "wires": [
            [
                "b142c7b025e9135b"
            ]
        ]
    },
    {
        "id": "e8f50c5efc42fa5e",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\inside_enclosure_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2040,
        "y": 2440,
        "wires": [
            [
                "7bba81cf7f551d6e"
            ]
        ]
    },
    {
        "id": "02016f0e01b9f3d7",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 2440,
        "wires": [
            [
                "e8f50c5efc42fa5e"
            ]
        ]
    },
    {
        "id": "9d3d1b37ea499eaa",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\controller_temp_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3041,
        "y": 2635,
        "wires": [
            []
        ]
    },
    {
        "id": "92e9e527bc6f6180",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2390,
        "y": 2720,
        "wires": [
            [
                "9666a8660ef0747d"
            ]
        ]
    },
    {
        "id": "7204e47acee2fbba",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\controller_temp_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2060,
        "y": 2720,
        "wires": [
            [
                "92e9e527bc6f6180"
            ]
        ]
    },
    {
        "id": "a42080b0c3f09eda",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1670,
        "y": 2720,
        "wires": [
            [
                "7204e47acee2fbba"
            ]
        ]
    },
    {
        "id": "b83d3a27ed7adee6",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\battery_power_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3018,
        "y": 2954,
        "wires": [
            []
        ]
    },
    {
        "id": "de9479929490869d",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2350,
        "y": 3080,
        "wires": [
            [
                "5727d386fad5fca7"
            ]
        ]
    },
    {
        "id": "b132d64ce5b3036a",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\battery_power_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2020,
        "y": 3080,
        "wires": [
            [
                "de9479929490869d"
            ]
        ]
    },
    {
        "id": "51f85628189af14d",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1630,
        "y": 3080,
        "wires": [
            [
                "b132d64ce5b3036a"
            ]
        ]
    },
    {
        "id": "785f5500bea1ff99",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\temp_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1150,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad054f7ca1e7053",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 2400,
        "wires": [
            [
                "6ea5f1cce4f052c1"
            ]
        ]
    },
    {
        "id": "8ee8bf858fb04e1c",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\temp_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 630,
        "y": 2400,
        "wires": [
            [
                "7ad054f7ca1e7053"
            ]
        ]
    },
    {
        "id": "d1755e290cd217ed",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 2400,
        "wires": [
            [
                "8ee8bf858fb04e1c"
            ]
        ]
    },
    {
        "id": "e0b1048bde1daebc",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\windspeed_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1080,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "56a84ea9724be224",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 990,
        "y": 2780,
        "wires": [
            [
                "600ea8d0a4a7aeb4"
            ]
        ]
    },
    {
        "id": "ba04faea4685a270",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\windspeed_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 680,
        "y": 2780,
        "wires": [
            [
                "56a84ea9724be224"
            ]
        ]
    },
    {
        "id": "aee21154f81a2546",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 2780,
        "wires": [
            [
                "ba04faea4685a270"
            ]
        ]
    },
    {
        "id": "c8fb40350370e002",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Rain filter",
        "func": "var inch = msg.payload.rain\n\ninch = (inch / 25.4)\n    msg.payload = inch\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2080,
        "wires": [
            [
                "f5c2705c42819fb5",
                "e2fa282c7f1a6ff7"
            ]
        ]
    },
    {
        "id": "f5c2705c42819fb5",
        "type": "ui_text",
        "z": "792ffe6e3ed14ad3",
        "group": "96611395a92827d0",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Rain",
        "format": "{{value | number:3}} Inches/Hr",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 2080,
        "wires": []
    },
    {
        "id": "624dd6fe111c8c85",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "96611395a92827d0",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Rain History",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0.0",
        "ymax": "",
        "removeOlder": "7",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 2123,
        "wires": [
            [
                "aa5d3831ba97774f"
            ]
        ]
    },
    {
        "id": "aa5d3831ba97774f",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\rain_grph_7_days.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1127,
        "y": 2119,
        "wires": [
            []
        ]
    },
    {
        "id": "c182878ea9186c57",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 2220,
        "wires": [
            [
                "dc03835f834afe5c"
            ]
        ]
    },
    {
        "id": "dc03835f834afe5c",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\rain_grph_7_days.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 760,
        "y": 2220,
        "wires": [
            [
                "848d30d40365825b"
            ]
        ]
    },
    {
        "id": "848d30d40365825b",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 2220,
        "wires": [
            [
                "624dd6fe111c8c85"
            ]
        ]
    },
    {
        "id": "9df681bad7706489",
        "type": "openweathermap",
        "z": "792ffe6e3ed14ad3",
        "name": "Get NWS Weather Every 15 Min",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Anytown",
        "country": "US",
        "language": "en",
        "x": 190,
        "y": 2060,
        "wires": [
            [
                "c8fb40350370e002",
                "2089f5db5a4a2b37",
                "5fea0ae7fd9854e9",
                "f8eb24b748c2d26a",
                "5c83c5c5f1cf2f96"
            ]
        ]
    },
    {
        "id": "f9ea427d2cf12167",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 2120,
        "wires": [
            [
                "9df681bad7706489"
            ]
        ]
    },
    {
        "id": "d76d4515774be6be",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 470,
        "y": 2120,
        "wires": [
            [
                "e2fa282c7f1a6ff7"
            ]
        ]
    },
    {
        "id": "5c83c5c5f1cf2f96",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "WX Out",
        "mode": "link",
        "links": [],
        "x": 825,
        "y": 1860,
        "wires": []
    },
    {
        "id": "c4850e807b67ecd2",
        "type": "modbus-read",
        "z": "792ffe6e3ed14ad3",
        "name": "Check Fan On",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "12",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "db1405cafe2f049c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 3780,
        "wires": [
            [
                "9b68859e811913fd"
            ],
            []
        ]
    },
    {
        "id": "9b68859e811913fd",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 3780,
        "wires": [
            [
                "26d2ea0ad5b1d5cb"
            ]
        ]
    },
    {
        "id": "26d2ea0ad5b1d5cb",
        "type": "ui_switch",
        "z": "792ffe6e3ed14ad3",
        "name": "Vault Fan",
        "label": "<font size = 3> Vault Fan",
        "tooltip": "",
        "group": "5f56fe13560e7fbb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-2x fa-power-off",
        "oncolor": "lightgreen",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-2x fa-power-off",
        "offcolor": "red",
        "animate": true,
        "className": "",
        "x": 640,
        "y": 3780,
        "wires": [
            [
                "962c8c2487f6f797"
            ]
        ]
    },
    {
        "id": "962c8c2487f6f797",
        "type": "switch",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 3780,
        "wires": [
            [
                "0a9fe752ec5ec824"
            ],
            [
                "fab6f002f14556a9"
            ]
        ]
    },
    {
        "id": "0a9fe752ec5ec824",
        "type": "modbus-write",
        "z": "792ffe6e3ed14ad3",
        "name": "Fan On",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "12",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "db1405cafe2f049c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1260,
        "y": 3740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fab6f002f14556a9",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Vault Fan OFF",
        "func": "var fc=5;\nvar sa=0;\nvar addresses=1;\nvar value=0x00;\n\nmsg.slave_ip=\"192.168.50.24\";\nmsg.payload={\"value\":value , 'fc':fc , 'united':24 , 'address' : sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3660,
        "wires": [
            [
                "29f11ae694a136f9"
            ]
        ]
    },
    {
        "id": "29f11ae694a136f9",
        "type": "modbus-flex-write",
        "z": "792ffe6e3ed14ad3",
        "name": "Fan Off",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "db1405cafe2f049c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1260,
        "y": 3660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "32daa830e537a891",
        "type": "modbus-read",
        "z": "792ffe6e3ed14ad3",
        "name": "Check AC On",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "12",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "db1405cafe2f049c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 3960,
        "wires": [
            [
                "c2f2bfa3d8863c32"
            ],
            []
        ]
    },
    {
        "id": "c2f2bfa3d8863c32",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 3960,
        "wires": [
            [
                "6f2c13c362e70948"
            ]
        ]
    },
    {
        "id": "6f2c13c362e70948",
        "type": "ui_switch",
        "z": "792ffe6e3ed14ad3",
        "name": "Vault AC",
        "label": "<font size = 3> Vault AC",
        "tooltip": "",
        "group": "5f56fe13560e7fbb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-2x fa-power-off",
        "oncolor": "lightgreen",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-2x fa-power-off",
        "offcolor": "red",
        "animate": true,
        "className": "",
        "x": 640,
        "y": 3980,
        "wires": [
            [
                "18deff4171b59f94"
            ]
        ]
    },
    {
        "id": "18deff4171b59f94",
        "type": "switch",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 3980,
        "wires": [
            [
                "9069e8cd6810024b"
            ],
            [
                "fcd8c9528d1ff159"
            ]
        ]
    },
    {
        "id": "9069e8cd6810024b",
        "type": "modbus-write",
        "z": "792ffe6e3ed14ad3",
        "name": "AC On",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "12",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "db1405cafe2f049c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1190,
        "y": 4040,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fcd8c9528d1ff159",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Vault AC  OFF",
        "func": "var fc=5;\nvar sa=1;\nvar addresses=1;\nvar value=0x00;\n\nmsg.slave_ip=\"192.168.50.24\";\nmsg.payload={\"value\":value , 'fc':fc , 'united':12 , 'address' : sa , 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 4180,
        "wires": [
            [
                "cb178ca23df36c29"
            ]
        ]
    },
    {
        "id": "cb178ca23df36c29",
        "type": "modbus-flex-write",
        "z": "792ffe6e3ed14ad3",
        "name": "AC Off",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "db1405cafe2f049c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1190,
        "y": 4180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3b3c20b299e47692",
        "type": "ui_template",
        "z": "792ffe6e3ed14ad3",
        "group": "217a0f6d5cebc3a9",
        "name": "Fan Timer",
        "order": 5,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"filled touched bigfont rounded vibrate\" style=\"background-color:#27ae60\" ng-click=\"send({payload: 'Fan 3 Hours '})\"> \nFan On - 3 Hours<br/>\n</md-button> ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 3720,
        "wires": [
            [
                "0a9fe752ec5ec824",
                "bc4c27fdf0f39cae"
            ]
        ]
    },
    {
        "id": "bc4c27fdf0f39cae",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 3700,
        "wires": [
            [
                "fab6f002f14556a9"
            ]
        ]
    },
    {
        "id": "0d2243c02667590e",
        "type": "ui_template",
        "z": "792ffe6e3ed14ad3",
        "group": "217a0f6d5cebc3a9",
        "name": "AC Timer",
        "order": 1,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"filled touched bigfont rounded vibrate\" style=\"background-color:#27ae60\" ng-click=\"send({payload: 'AC 2 Hours '})\"> \nAC On - 2 Hours<br/>\n</md-button> ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 4140,
        "wires": [
            [
                "f03e47de4676f3db",
                "9069e8cd6810024b"
            ]
        ]
    },
    {
        "id": "f03e47de4676f3db",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 4140,
        "wires": [
            [
                "fcd8c9528d1ff159"
            ]
        ]
    },
    {
        "id": "c48dabcf6832b19c",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Wind Turbine Graph",
        "mode": "link",
        "links": [],
        "x": 2505,
        "y": 320,
        "wires": []
    },
    {
        "id": "7303d997992d34ad",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Grid Graph",
        "mode": "link",
        "links": [],
        "x": 2495,
        "y": 620,
        "wires": []
    },
    {
        "id": "b3f16cd12c70b776",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Grey Box Graph",
        "mode": "link",
        "links": [],
        "x": 2475,
        "y": 880,
        "wires": []
    },
    {
        "id": "a2171bf0c2ec41ca",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Radio Power Graph",
        "mode": "link",
        "links": [],
        "x": 2485,
        "y": 1140,
        "wires": []
    },
    {
        "id": "a85980b2a1daec5d",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Inside Vault Graph",
        "mode": "link",
        "links": [],
        "x": 2535,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1404891cbc1b109a",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Solar Control Graph",
        "mode": "link",
        "links": [],
        "x": 2505,
        "y": 1580,
        "wires": []
    },
    {
        "id": "e1610cf315941e42",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Outside Air Graph",
        "mode": "link",
        "links": [],
        "x": 2495,
        "y": 2040,
        "wires": []
    },
    {
        "id": "5f719cd22cfb12e6",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Inside Enclosure Graph",
        "mode": "link",
        "links": [],
        "x": 2645,
        "y": 2300,
        "wires": []
    },
    {
        "id": "d84230cfd4709c9b",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Controller Temperature Graph",
        "mode": "link",
        "links": [],
        "x": 2675,
        "y": 2560,
        "wires": []
    },
    {
        "id": "2409262d1dbd8ae5",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Tower Base Batt Graph",
        "mode": "link",
        "links": [],
        "x": 2705,
        "y": 2880,
        "wires": []
    },
    {
        "id": "9173a5c6393fcb5e",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Flow Feeding Env Tab",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "9c9d9ef1a1a2233d",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2520,
        "y": 280,
        "wires": []
    },
    {
        "id": "c3cc089dbfdd7e7d",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2520,
        "y": 580,
        "wires": []
    },
    {
        "id": "69b43d63d6788e8b",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2500,
        "y": 820,
        "wires": []
    },
    {
        "id": "26ea806005966015",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2480,
        "y": 1100,
        "wires": []
    },
    {
        "id": "36c09124a69725f9",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2560,
        "y": 1300,
        "wires": []
    },
    {
        "id": "162298af4a3265a2",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2500,
        "y": 1540,
        "wires": []
    },
    {
        "id": "4a737b8f55b892a8",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2560,
        "y": 1960,
        "wires": []
    },
    {
        "id": "dd7de74e71c34c13",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2660,
        "y": 2260,
        "wires": []
    },
    {
        "id": "5f2683496c6fd57b",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2700,
        "y": 2520,
        "wires": []
    },
    {
        "id": "6f6dbff8113d3ff8",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 2720,
        "y": 2820,
        "wires": []
    },
    {
        "id": "199e8bc9feee6c2d",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Tool Bar",
        "info": "",
        "x": 920,
        "y": 1820,
        "wires": []
    },
    {
        "id": "daab8801689a5c90",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "No Longer used with WX station",
        "info": "",
        "x": 130,
        "y": 2480,
        "wires": []
    },
    {
        "id": "16cad5896f409d26",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Vault AC/Fan Controls",
        "info": "",
        "x": 240,
        "y": 3540,
        "wires": []
    },
    {
        "id": "de61f907792a3564",
        "type": "ui_template",
        "z": "792ffe6e3ed14ad3",
        "group": "217a0f6d5cebc3a9",
        "name": "Fan Timer - 1 hr",
        "order": 7,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"filled touched bigfont rounded vibrate\" style=\"background-color:#27ae60\" ng-click=\"send({payload: 'Fan 3 Hours '})\"> \nFan On - 1 Hour<br/>\n</md-button> ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 3640,
        "wires": [
            [
                "40e909cd35981acc",
                "0a9fe752ec5ec824"
            ]
        ]
    },
    {
        "id": "40e909cd35981acc",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 3620,
        "wires": [
            [
                "fab6f002f14556a9"
            ]
        ]
    },
    {
        "id": "33b5cfac3f368156",
        "type": "ui_template",
        "z": "792ffe6e3ed14ad3",
        "group": "217a0f6d5cebc3a9",
        "name": "AC Timer - 1 hr",
        "order": 3,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"filled touched bigfont rounded vibrate\" style=\"background-color:#27ae60\" ng-click=\"send({payload: 'AC 2 Hours '})\"> \nAC On - 1 Hour<br/>\n</md-button> ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 4260,
        "wires": [
            [
                "081a518219def995",
                "9069e8cd6810024b"
            ]
        ]
    },
    {
        "id": "081a518219def995",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 4240,
        "wires": [
            [
                "fcd8c9528d1ff159"
            ]
        ]
    },
    {
        "id": "0a63d82ebe9eeb86",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 400,
        "wires": [
            [
                "5c7e9cd35bedd5b4"
            ]
        ]
    },
    {
        "id": "5c7e9cd35bedd5b4",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 1960,
        "y": 400,
        "wires": [
            [
                "6185b144525fa228"
            ]
        ]
    },
    {
        "id": "83cec1c8cd73af14",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 660,
        "wires": [
            [
                "e9efa16a4e935b63"
            ]
        ]
    },
    {
        "id": "e9efa16a4e935b63",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 2040,
        "y": 660,
        "wires": [
            [
                "6dbfd3f252c2a48e"
            ]
        ]
    },
    {
        "id": "baaf06910ef2cc95",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 900,
        "wires": [
            [
                "38bb86e5313b8692"
            ]
        ]
    },
    {
        "id": "38bb86e5313b8692",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 2020,
        "y": 900,
        "wires": [
            [
                "2c60e49ef595faab"
            ]
        ]
    },
    {
        "id": "64e64e7537ab5585",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1833,
        "y": 1177,
        "wires": [
            [
                "80f0c221afa381f7"
            ]
        ]
    },
    {
        "id": "80f0c221afa381f7",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 1993,
        "y": 1177,
        "wires": [
            [
                "4a2121e7b11fcfea"
            ]
        ]
    },
    {
        "id": "f3d773b8267008ee",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 1380,
        "wires": [
            [
                "dae065520405391d"
            ]
        ]
    },
    {
        "id": "dae065520405391d",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 2080,
        "y": 1380,
        "wires": [
            [
                "6ff3c26f3da57212"
            ]
        ]
    },
    {
        "id": "c5dfaff69961395a",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 1620,
        "wires": [
            [
                "89b2551a9b05c083"
            ]
        ]
    },
    {
        "id": "89b2551a9b05c083",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 2000,
        "y": 1620,
        "wires": [
            [
                "bf7e84f90fd21c5e"
            ]
        ]
    },
    {
        "id": "fd8ca4ddf771e480",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2060,
        "wires": [
            [
                "c246f5312c098eb0"
            ]
        ]
    },
    {
        "id": "c246f5312c098eb0",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 2100,
        "y": 2060,
        "wires": [
            [
                "3594b0273dc9d42d"
            ]
        ]
    },
    {
        "id": "410276872227a39b",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 2320,
        "wires": [
            [
                "c6edd4b364b2aa97"
            ]
        ]
    },
    {
        "id": "c6edd4b364b2aa97",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 2120,
        "y": 2320,
        "wires": [
            [
                "08bf1974d6235795"
            ]
        ]
    },
    {
        "id": "03b85afe0163cfd2",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 2580,
        "wires": [
            [
                "21e2a008ab61ba0f"
            ]
        ]
    },
    {
        "id": "21e2a008ab61ba0f",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 2080,
        "y": 2580,
        "wires": [
            [
                "7354a693b73ef962"
            ]
        ]
    },
    {
        "id": "51d64b23ea8a04df",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 2902,
        "wires": [
            [
                "a7c0d6493a92dd46"
            ]
        ]
    },
    {
        "id": "a7c0d6493a92dd46",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 2070,
        "y": 2902,
        "wires": [
            [
                "f1da1fed1b2b1e0d"
            ]
        ]
    },
    {
        "id": "e99f0b682ee7d9aa",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Read .24 controller - Environmental Control",
        "info": "",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "cf3cded7c8d92462",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Stagger read requests for queing",
        "info": "",
        "x": 310,
        "y": 180,
        "wires": []
    },
    {
        "id": "465a95f8b20fb545",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to UI output",
        "info": "",
        "x": 1020,
        "y": 540,
        "wires": []
    },
    {
        "id": "bce0beec68d0428b",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Stagger read requests for queing",
        "info": "",
        "x": 330,
        "y": 860,
        "wires": []
    },
    {
        "id": "e5eca3c889e5d4f7",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Read .34 controller - Tower Enclosure Status ",
        "info": "",
        "x": 650,
        "y": 800,
        "wires": []
    },
    {
        "id": "149abd229865a164",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Modbus data gathering and queue management",
        "info": "What the explainer video:\nhttps://youtu.be/FVI1hgdqcms",
        "x": 660,
        "y": 740,
        "wires": []
    },
    {
        "id": "acf86507cbcd1302",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB",
        "info": "",
        "x": 2180,
        "y": 340,
        "wires": []
    },
    {
        "id": "6185b144525fa228",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Wind Turbine :15",
        "mode": "link",
        "links": [],
        "x": 2145,
        "y": 400,
        "wires": []
    },
    {
        "id": "6dbfd3f252c2a48e",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Grid Voltage :15",
        "mode": "link",
        "links": [],
        "x": 2195,
        "y": 620,
        "wires": []
    },
    {
        "id": "ce3a1f8c7f71c48f",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2170,
        "y": 580,
        "wires": []
    },
    {
        "id": "d475618ac2c4b726",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2230,
        "y": 820,
        "wires": []
    },
    {
        "id": "2c60e49ef595faab",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Grey Box Temp :30",
        "mode": "link",
        "links": [],
        "x": 2165,
        "y": 860,
        "wires": []
    },
    {
        "id": "4a2121e7b11fcfea",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Radio Power Voltage :15",
        "mode": "link",
        "links": [],
        "x": 2135,
        "y": 1140,
        "wires": []
    },
    {
        "id": "e2dfb6c6799e4382",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2140,
        "y": 1100,
        "wires": []
    },
    {
        "id": "67bff7f1f737f5e4",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2217.5,
        "y": 1325,
        "wires": []
    },
    {
        "id": "6ff3c26f3da57212",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Inside Vault Temp :30",
        "mode": "link",
        "links": [],
        "x": 2235,
        "y": 1360,
        "wires": []
    },
    {
        "id": "bf7e84f90fd21c5e",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Solar Control Temp :30",
        "mode": "link",
        "links": [],
        "x": 2155,
        "y": 1580,
        "wires": []
    },
    {
        "id": "fe76f286179a329f",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2190,
        "y": 1540,
        "wires": []
    },
    {
        "id": "8b557d9c67cda518",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2250,
        "y": 1960,
        "wires": []
    },
    {
        "id": "3594b0273dc9d42d",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Outside Air Temp :30",
        "mode": "link",
        "links": [],
        "x": 2245,
        "y": 2020,
        "wires": []
    },
    {
        "id": "08bf1974d6235795",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Inside Enclosure Temp :30",
        "mode": "link",
        "links": [],
        "x": 2305,
        "y": 2320,
        "wires": []
    },
    {
        "id": "d1938f8efaebadb7",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2330,
        "y": 2260,
        "wires": []
    },
    {
        "id": "7354a693b73ef962",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Controller Temp :30",
        "mode": "link",
        "links": [],
        "x": 2305,
        "y": 2560,
        "wires": []
    },
    {
        "id": "6500fd6cf0e71201",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2350,
        "y": 2520,
        "wires": []
    },
    {
        "id": "f1da1fed1b2b1e0d",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "Tower Base Batt :15",
        "mode": "link",
        "links": [],
        "x": 2335,
        "y": 2880,
        "wires": []
    },
    {
        "id": "949a8f903d9dd767",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to Mqtt_InfluxDB_Alert",
        "info": "",
        "x": 2370,
        "y": 2820,
        "wires": []
    },
    {
        "id": "5d94141d02cd50e9",
        "type": "http request",
        "z": "792ffe6e3ed14ad3",
        "name": "Fetch diagnostics.xml",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.50.24/diagnostics.xml",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 3280,
        "wires": [
            [
                "83a7c46159fdc6c7"
            ]
        ]
    },
    {
        "id": "83a7c46159fdc6c7",
        "type": "xml",
        "z": "792ffe6e3ed14ad3",
        "name": "Parse XML",
        "property": "payload",
        "attr": " ",
        "chr": " ",
        "x": 650,
        "y": 3280,
        "wires": [
            [
                "c984470746097216"
            ]
        ]
    },
    {
        "id": "fc1348d5de91a5e9",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Trigger Request",
        "props": [],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 3280,
        "wires": [
            [
                "5d94141d02cd50e9"
            ]
        ]
    },
    {
        "id": "c984470746097216",
        "type": "change",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.datavalues.vin[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 3280,
        "wires": [
            [
                "eea5305ee6b00d8f",
                "0b8d209e8a5dcc54",
                "fa4cd848095fa22e"
            ]
        ]
    },
    {
        "id": "eea5305ee6b00d8f",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "EMPC",
        "group": "7dacb2dbf22828a7",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "EMPC",
        "label": "Volts",
        "format": "{{payload | number:2}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#f04f0a",
            "#ca3838",
            "#00bd1f"
        ],
        "seg1": "12",
        "seg2": "12",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 3200,
        "wires": []
    },
    {
        "id": "93887df322642b6e",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "d5fe809990847bca",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "EMPC Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 3280,
        "wires": [
            [
                "fe6ec4fa72eb3ed7"
            ]
        ]
    },
    {
        "id": "6bfa427fb2d05622",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "set for every :15",
        "info": "",
        "x": 150,
        "y": 3200,
        "wires": []
    },
    {
        "id": "60f6e345732125cb",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "EMPC Voltage :15",
        "mode": "link",
        "links": [],
        "x": 925,
        "y": 3120,
        "wires": []
    },
    {
        "id": "f583d75ac6df2bb4",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data to 7 Day Tab/Flow",
        "info": "",
        "x": 1240,
        "y": 3060,
        "wires": []
    },
    {
        "id": "6db6507e4987ae2f",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "EMPC Graph 7 Days",
        "mode": "link",
        "links": [],
        "x": 1245,
        "y": 3100,
        "wires": []
    },
    {
        "id": "5e074e36d890dd23",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Save to file in case of reboot",
        "info": "",
        "x": 1300,
        "y": 3240,
        "wires": []
    },
    {
        "id": "fe6ec4fa72eb3ed7",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\EMPC_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1490,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "82a565d3e42ea278",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 3400,
        "wires": [
            [
                "93887df322642b6e"
            ]
        ]
    },
    {
        "id": "b63488abbbace326",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\EMPC_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 510,
        "y": 3400,
        "wires": [
            [
                "82a565d3e42ea278"
            ]
        ]
    },
    {
        "id": "c3164c99e6d0a397",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Read from file after reboot",
        "info": "",
        "x": 510,
        "y": 3340,
        "wires": []
    },
    {
        "id": "ab151072b3e1b9ab",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 3380,
        "wires": [
            [
                "b63488abbbace326"
            ]
        ]
    },
    {
        "id": "cf20bf01e2409474",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data InfluxDB",
        "info": "",
        "x": 970,
        "y": 3080,
        "wires": []
    },
    {
        "id": "0b8d209e8a5dcc54",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 3140,
        "wires": [
            [
                "6db6507e4987ae2f",
                "93887df322642b6e"
            ]
        ]
    },
    {
        "id": "fa4cd848095fa22e",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Convert string to number",
        "func": "msg.payload = Number(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 3180,
        "wires": [
            [
                "60f6e345732125cb",
                "040a15c3ea15837f"
            ]
        ]
    },
    {
        "id": "040a15c3ea15837f",
        "type": "link out",
        "z": "792ffe6e3ed14ad3",
        "name": "EMPC Alert",
        "mode": "link",
        "links": [],
        "x": 1001,
        "y": 3032,
        "wires": []
    },
    {
        "id": "0c070717a9ee402c",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "Send data Alert if under 12V",
        "info": "",
        "x": 1018,
        "y": 2977,
        "wires": []
    },
    {
        "id": "e2fa282c7f1a6ff7",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 629,
        "y": 2124,
        "wires": [
            [
                "624dd6fe111c8c85"
            ]
        ]
    },
    {
        "id": "dc651f1dc5c05a30",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "Every 60s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 106,
        "y": 4427.5,
        "wires": [
            [
                "1617020259e51a02"
            ]
        ]
    },
    {
        "id": "f088e9b81d85a9ff",
        "type": "delay",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 196,
        "y": 4716.5,
        "wires": [
            [
                "afaf23e411aa6d42"
            ]
        ]
    },
    {
        "id": "afaf23e411aa6d42",
        "type": "smooth",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": true,
        "x": 616,
        "y": 4716.5,
        "wires": [
            [
                "acc0cd26e563e447"
            ]
        ]
    },
    {
        "id": "acc0cd26e563e447",
        "type": "ui_chart",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "group": "d5fe809990847bca",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "4 Sq Batt Voltage Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1067,
        "y": 4712.5,
        "wires": [
            [
                "e2a51517aca5d74a"
            ]
        ]
    },
    {
        "id": "e2a51517aca5d74a",
        "type": "file",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\4_sq_grph_24.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1393,
        "y": 4714.5,
        "wires": [
            []
        ]
    },
    {
        "id": "1e42d53f13f75f05",
        "type": "json",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 826,
        "y": 4796.5,
        "wires": [
            [
                "acc0cd26e563e447"
            ]
        ]
    },
    {
        "id": "647d95c50e844a99",
        "type": "file in",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "filename": "\\Users\\Remote\\.node-red\\logs\\4_sq_grph_24.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 506,
        "y": 4796.5,
        "wires": [
            [
                "1e42d53f13f75f05"
            ]
        ]
    },
    {
        "id": "95c0fb3f2a47e314",
        "type": "inject",
        "z": "792ffe6e3ed14ad3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 166,
        "y": 4796.5,
        "wires": [
            [
                "647d95c50e844a99"
            ]
        ]
    },
    {
        "id": "1617020259e51a02",
        "type": "exec",
        "z": "792ffe6e3ed14ad3",
        "command": "curl --max-time 5 http://192.168.50.32",
        "addpay": false,
        "append": "",
        "useSpawn": false,
        "timer": "",
        "oldrc": false,
        "name": "Curl Web Request (5s Timeout)",
        "x": 362,
        "y": 4429.5,
        "wires": [
            [
                "4ee02b42d28fb981"
            ],
            [],
            []
        ]
    },
    {
        "id": "4ee02b42d28fb981",
        "type": "function",
        "z": "792ffe6e3ed14ad3",
        "name": "Extract Battery Voltage",
        "func": "let html = msg.payload.toString();\n\n// Use a more forgiving regex that handles line breaks, spacing, and case insensitivity\nlet regex = /Battery Voltage\\s+is\\s+([\\d.]+)\\s+Volts/i;\nlet match = html.match(regex);\n\nif (match && match[1]) {\n    msg.payload = parseFloat(match[1]);\n    node.status({fill:\"green\", shape:\"dot\", text:`Voltage: ${msg.payload}V`});\n} else {\n    msg.payload = 0;\n    node.status({fill:\"red\", shape:\"ring\", text:\"Voltage not found\"});\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 652,
        "y": 4429.5,
        "wires": [
            [
                "8d51544f16bb182f",
                "f088e9b81d85a9ff"
            ]
        ]
    },
    {
        "id": "8d51544f16bb182f",
        "type": "ui_gauge",
        "z": "792ffe6e3ed14ad3",
        "name": "4 Square Battery Voltage",
        "group": "7dacb2dbf22828a7",
        "order": 0,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "4 Sq Batt Voltage",
        "label": "Volts",
        "format": "{{value}}",
        "min": 10,
        "max": 15,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 972,
        "y": 4429.5,
        "wires": []
    },
    {
        "id": "5254523ebc244157",
        "type": "comment",
        "z": "792ffe6e3ed14ad3",
        "name": "4 Sq Batt Voltage (when active)",
        "info": "",
        "x": 491,
        "y": 4344,
        "wires": []
    },
    {
        "id": "a1253a252ad0bdfd",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "81d7209723679c17",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "b8259b09266a1c99",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "81d7209723679c17",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "08e931b046175a01",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "81d7209723679c17",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "2336f3d3793a91c6",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "81d7209723679c17",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "21177b3ff324d6cf",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "3eaa688bb6e4c063",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "a67a1757483f72d7",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "3eaa688bb6e4c063",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "084bae03c4492d89",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "3eaa688bb6e4c063",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "64706d1973a27f42",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "3eaa688bb6e4c063",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "797eb259358b1eb0",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "3eaa688bb6e4c063",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "2eff8a211df67b17",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "3eaa688bb6e4c063",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "eef54a38eafc15c4",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "b02fd13987c80f05",
        "order": 16,
        "width": "4",
        "height": "1"
    },
    {
        "id": "ce741689b05e1e66",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "b02fd13987c80f05",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "bd8f639a01e4642e",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "b02fd13987c80f05",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "f4521ffd6acc2932",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "81d7209723679c17",
        "order": 19,
        "width": 4,
        "height": 1
    },
    {
        "id": "8b4bfb10bf28613a",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "d5fe809990847bca",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "df261e6a6fd39910",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "217a0f6d5cebc3a9",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b9aa29dba2055024",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "217a0f6d5cebc3a9",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "6e3fe59e86fe23e3",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "217a0f6d5cebc3a9",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "d6d094de978059e4",
        "type": "ui_spacer",
        "z": "792ffe6e3ed14ad3",
        "name": "spacer",
        "group": "217a0f6d5cebc3a9",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "db1405cafe2f049c",
        "type": "modbus-client",
        "name": "Modbus 24",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.50.24",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 24,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "7dacb2dbf22828a7",
        "type": "ui_group",
        "name": "Environment Status",
        "tab": "662b01c14c36905e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fa5b08d298eb1d31",
        "type": "modbus-client",
        "name": "Modbus 34",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.50.34",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 34,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "dab48f89cede9078",
        "type": "ui_group",
        "name": "History",
        "tab": "662b01c14c36905e",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d5fe809990847bca",
        "type": "ui_group",
        "name": "History B",
        "tab": "662b01c14c36905e",
        "order": 3,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "96611395a92827d0",
        "type": "ui_group",
        "name": "NWS Conditions",
        "tab": "662b01c14c36905e",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f56fe13560e7fbb",
        "type": "ui_group",
        "name": "AC/Fan Control",
        "tab": "662b01c14c36905e",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "217a0f6d5cebc3a9",
        "type": "ui_group",
        "name": "AC/Fan Timer",
        "tab": "662b01c14c36905e",
        "order": 7,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "81d7209723679c17",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "6f2586bb65b2193a",
        "order": 1,
        "disp": false,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3eaa688bb6e4c063",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "6f2586bb65b2193a",
        "order": 2,
        "disp": false,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b02fd13987c80f05",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "6f2586bb65b2193a",
        "order": 3,
        "disp": false,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "662b01c14c36905e",
        "type": "ui_tab",
        "name": "Environmental",
        "icon": "info",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6f2586bb65b2193a",
        "type": "ui_tab",
        "name": "Master Status Graphs",
        "icon": "show_chart",
        "order": 12,
        "disabled": false,
        "hidden": false
    }
]